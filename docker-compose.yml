services:
  api:
    build:
      context: ./
      dockerfile: docker/dev.Dockerfile
    command: 'npm run dev -- --host 0.0.0.0'
    depends_on:
      - mongo
    environment:
      NODE_ENV: dev
      TESCO_URL: http://proxy:3333/tesco/
      SAINSBURYS_URL: http://proxy:3333/sainsburys/
      MONGODB_HOST: mongo
      SEARCH_RESULT_COUNT: ${SEARCH_RESULT_COUNT:-36}
      VCR_MODE: ${VCR_MODE:-}
      RUN_MIGRATION: ${RUN_MIGRATION:-}
      LOG_LEVEL: ${LOG_LEVEL:-}
    ports:
      - ${PORT:-5173}:5173
    networks:
      webnet:
      mongo_network:
      proxy_network:
    volumes:
      - ./node_modules:/usr/src/app/node_modules
      - ./.svelte-kit:/usr/src/app/.svelte-kit
      - ./package.json:/usr/src/app/package.json:ro
      - ./package-lock.json:/usr/src/app/package-lock.json:ro
      - ./svelte.config.js:/usr/src/app/svelte.config.js:ro
      - ./tsconfig.json:/usr/src/app/tsconfig.json:ro
      - ./vite.config.ts:/usr/src/app/vite.config.ts:ro
      - ./src:/usr/src/app/src:ro
      - ./static:/usr/src/app/static:ro
    restart: on-failure
  proxy:
    build:
      context: ./
      dockerfile: docker/proxy.Dockerfile
    expose:
      - 3333
    ports:
      - '3333:3333'
    volumes:
      - ./proxy/proxy.js:/usr/src/app/proxy.js
    restart: always
    networks:
      proxy_network:

  mongo:
    image: mongo:5
    command: mongod --quiet --logpath /dev/null
    restart: always
    expose:
      - 27017
    ports:
      - '27017:27017'
    networks:
      mongo_network:

networks:
  webnet:
    external: true
  mongo_network:
  proxy_network:
