services:
  api:
    container_name: shopping-api
    image: ghcr.io/paullessing/supermarket-watch:latest
    depends_on:
      - mongo
      - proxy
    ports:
      - ${PORT:-3333}:3333
    environment:
      # Config for the application
      NODE_ENV: prod
      PORT: ${PORT:-3333}
      TESCO_URL: ${TESCO_URL}
      SAINSBURYS_URL: ${SAINSBURYS_URL}
      SEARCH_RESULT_COUNT: ${SEARCH_RESULT_COUNT:-36}
    restart: always
    networks:
      webnet:
      supermarket_network:
    healthcheck:
      test: >
        node -e "fetch('http://localhost:${PORT:-3333}/health')
          .then(res => res.text())
          .then(text => process.exit(text === 'ALLOK' ? 0: 1))
          .catch(e => { console.error(e); process.exit(1); })"
      interval: 60s
      timeout: 10s
      retries: 5
      start_period: 5s
  proxy:
    container_name: shopping-proxy
    image: ghcr.io/paullessing/supermarket-watch-proxy:latest
    expose:
      - ${PORT:-3333}
    restart: always
    networks:
      supermarket_network:
  mongo:
    container_name: shopping-db
    image: mongo:5
    restart: always
    networks:
      supermarket_network:
    volumes:
      - mongodata:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/shopping --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

networks:
  webnet:
    external: true
  supermarket_network:

volumes:
  mongodata:
